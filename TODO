+ Create Camera

+ Create Cube
	+ mesh
	+ textures
		+ create texture atlas
			+ class
		+ create texture uvs
		+ add texture uvs to chunk::update()
		+ add texture to shaders
	+ shaders

- Skybox
	- texture
		- stars
		- sun
		- moon
	- render

- Lighting
	- sunlight
		- day/night cycle
	- torches/lightsource
		? colors
	+ fog

- Chunk management
	+ make chunks accessible from other chunks
	+ lists
		+ update
		+ load
		+ generate
		+ unload
	+ limit chunk generation per frame
	+ assure chunk neighbors are setup before building
	+ pass camera to update visibility
	+ prioritize generating chunks closer to the player
	+ frustum culling
	- save chunk to file
	+ multithreaded
	+ placing blocks
		+ switch block types
		+ update neighboring chunks
		+ ray casting from camera

- Terrain generation
	- move generation to separate class
	+ different noise values per block
	+ splines
	- biomes
	- decoration
		- trees
		+ water
			+ mesh
			+ opacity
				- render to separate framebuffer
	+ caves
		+ 3D perlin noise

- Setup input
	+ move camera
	- make input tied to window
	+ switch to callbacks (std::bind)
	+ deltaTime (put in glu?)

- Settings
	- create configs
		- input verification
		- chunk dimensions
		- render distance
		- terrain generation
			- spline settings
			- noise settings
				- octaves
				- amplitude
				- frequency
		- seed
		- load map
	? reload


general
	+ make alternative for std::expected :(
	- clean up helper functions in chunk and chunk management (static in class etc)

- follow voxel engine tutorial (https://sites.google.com/site/letsmakeavoxelengine/home/basic-block-rendering)